
Процедура ВыполнитьЗадание(НомерЗадания) Экспорт 
	
	Сообщить(СтрШаблон("Задание %1 запущено.", НомерЗадания));
	
	Подключена = ПодключитьВнешнююКомпоненту("Обработка.УсыплениеНитиВыполнения.Макет.Компонента", "infostart_event_2018_sleep", ТипВнешнейКомпоненты.Native);
	
	Если Не Подключена Тогда
	
		Сообщить("Не удалось подключить компоненту");
	
	КонецЕсли; 
	
	Попытка
	
		Компонента = Новый("AddIn.infostart_event_2018_sleep.SleepExtension");
		
		ИмяЗадания = СтрШаблон("Задание %1", НомерЗадания);
		
		Таймер = 3;
		
		Для Сч = 1 По 8 Цикл
		
			Если Сч = 1 Тогда
				
				Сообщить(СтрШаблон("[%1] %2 усыплено на %3 сек.", ТекущаяДата(), ИмяЗадания, 1));
				Компонента.Усыпить();
			
			Иначе
				
				Сообщить(СтрШаблон("[%1] %2 усыплено на %3 сек.", ТекущаяДата(), ИмяЗадания, Таймер));
				Компонента.Усыпить(Таймер);
			
			КонецЕсли;
			
			ТекущаяДата = ТекущаяДата();
			
			Сообщить(СтрШаблон("[%1] %2 пробудилось", ТекущаяДата, ИмяЗадания));
		
		КонецЦикла;
	
	Исключение
		
		Сообщить(ОписаниеОшибки());
	
	КонецПопытки;  

КонецПроцедуры
 
Функция ВыполнитьЗаданиеВФоне(НомерЗадания = 0) Экспорт 

	Параметры = Новый Массив;
	Параметры.Добавить(НомерЗадания);
	
	Ключ = СтрШаблон("Задание%1", НомерЗадания);
	
	Отбор = Новый Структура("Ключ, Состоянние", Ключ, СостояниеФоновогоЗадания.Активно);
	
	Задания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Если Задания.Количество() = 0 Тогда
	
		Задание = ФоновыеЗадания.Выполнить("ВыполнениеЗадания.ВыполнитьЗадание", Параметры, Ключ);
		
	Иначе 
		
		Задание = Задания[0];
	
	КонецЕсли; 
	
	Возврат Задание.УникальныйИдентификатор;

КонецФункции
 